---
import { Icon } from "astro-icon/components";

interface Props {
    variant: "tip" | "caution" | "danger" | "info";
    text: string | null;
    collapsed: "false" | "true";
}

const { variant, text, collapsed } = Astro.props as Props;

const icon = (() => {
    switch (variant) {
        case "tip":
            return "tabler/bulb";
        case "caution":
            return "tabler/alert-triangle";
        case "danger":
            return "tabler/bug";
        case "info":
            return "tabler/info";
    }
})();
---

<div
    class:list={[
        "aside my-3 rounded-md border-l-4 px-4 py-3 prose-p:my-0",
        {
            "border-green-400 bg-green-400/20": variant === "tip",
        },
        {
            "border-yellow-400 bg-yellow-400/20": variant === "caution",
        },
        {
            "border-red-400 bg-red-400/20": variant === "danger",
        },
        {
            "border-sky-400 bg-sky-400/20": variant === "info",
        },
    ]}
>
    <div>
        {
            collapsed == "false" && (
                <details open>
                    <summary class="flex items-center gap-2 pb-2">
                        <Icon name={icon} class="h-6 w-6" />
                        <p class="font-bold text-base-content">
                            {text ? text : variant.toUpperCase()}
                        </p>
                        <span class="icon" />
                    </summary>
                    <slot />
                </details>
            )
        }
        {
            collapsed == "true" && (
                <details>
                    <summary class="flex items-center gap-2 pb-2">
                        <Icon name={icon} class="h-6 w-6" />
                        <p class="font-bold text-base-content">
                            {text ? text : variant.toUpperCase()}
                        </p>
                        <span class="icon" />
                    </summary>
                    <slot />
                </details>
            )
        }
        {
            collapsed == undefined && (
                <>
                    <summary class="flex items-center gap-2 pb-2">
                        <Icon name={icon} class="h-6 w-6" />
                        <p class="font-bold text-base-content">
                            {text ? text : variant.toUpperCase()}
                        </p>
                    </summary>
                    <slot />
                </>
            )
        }
    </div>

    <style>
        details > summary span.icon {
            color: #2596be;
            width: 60px;
            height: 24px;
            transition: all 0.3s;
            margin-left: auto;
        }

        .icon::before {
            content: "expand";
        }

        details[open] .icon::before {
            content: "collapse";
        }

        summary {
            display: flex;
            cursor: pointer;
        }

        summary::-webkit-details-marker {
            display: none;
        }
    </style>
</div>
